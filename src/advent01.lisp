(defun aoc01-load-input ()
  (uiop:read-file-lines "../input/input01.txt"))

(defun aoc01-determine-larger-than-previous (depths)
  (let* ((prev (first depths))
         (depths (rest depths))
         (larger 0))
    (dolist (d depths)
      (when (< prev d) (incf larger))
      (setf prev d))
    (format t "~a larger than previous~%" larger)))

(defun aoc0101 ()
  (let* ((input (aoc01-load-input))
         (depths (map 'list #'parse-integer input)))
    (aoc01-determine-larger-than-previous depths)))

(defun aoc0102 ()
  (let* ((input (aoc01-load-input))
         (depths (map 'list #'parse-integer input))
         (window (make-array 3 :initial-element 0))
         (sum-depths '()))
    (setf (aref window 0) (+ (first depths) (second depths)))
    (setf (aref window 1) (second depths))
    (setf depths (cddr depths))
    (dolist (d depths)
      (incf (aref window 0) d)
      (incf (aref window 1) d)
      (incf (aref window 2) d)
      (format t "~a~%" window)
      (push (shiftf (aref window 0) (aref window 1) (aref window 2) 0)
            sum-depths))
    (aoc01-determine-larger-than-previous (reverse sum-depths))))
